<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.xmg.mybatis.domain.UserMapper">

    <!-- 代表结果集和对象的映射关系 resultMapping
        type:映射对应的类型是谁?
        id:给这个映射关系起一个名字;
    -->
    <resultMap id="user_mapping" type="User">
        <!--<id column="" property="" javaType="" jdbcType=""/>-->
        <!-- id/result都可以用来映射列到属性,
            id一般用于主键;
            result一般用户非主键字段;
        -->
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="email" property="email"/>
        <result column="age" property="age"/>
        <result column="borndate" property="bornDate"/>
    </resultMap>

    <!--
        keyColumn:主键的列
        keyProperty:主键对应的属性
        useGeneratedKeys:true(使用数据库自动生成的主键id值设置到对象的OID中)
        parameterType:参数的类型
    -->
    <insert id="add" keyColumn="id" keyProperty="id" useGeneratedKeys="true" parameterType="com.xmg.mybatis.domain.User">
        insert into user(name,email,age,borndate) values (#{name},#{email},#{age},#{bornDate})
    </insert>

    <!-- 修改 -->
    <update id="update" parameterType="User">
        update user
        <set>
            <if test="name!=null">
                name = #{name},
            </if>
            <if test="email!=null">
                email=#{email},
            </if>
            age=#{age},
            <if test="bornDate!=null">
                borndate=#{bornDate},
            </if>
        </set>
        where id = #{id}
    </update>

    <!-- 抽取column -->
    <!-- 如果sql有使用到resultMap,不能放在ResultMap之前 -->
    <sql id="user_column">
        id,name,email,age,borndate
    </sql>

    <!-- get
        注意,一个SQL元素只能有一个resultMap或者一个resultType
    -->
    <select id="get" parameterType="long" resultMap="user_mapping">
        select <include refid="user_column"/> from user where id = #{id}
    </select>

    <!-- delete -->
    <delete id="delete" parameterType="long">
        delete from user where id = #{id}
    </delete>

    <!-- list -->
    <select id="list" resultType="User">
        select <include refid="user_column"/> from user
    </select>

    <!-- 提取SQL -->
    <!-- 如果sql有使用到resultMap,不能放在ResultMap之前 -->
    <sql id="user_where">
        <where>
            <if test="name!=null">
                and name like concat('%',#{name},'%')
            </if>
            <if test="beginAge > -1">
                and age &gt;= #{beginAge}
            </if>
            <if test="endAage >-1">
                and age &lt;= #{endAge}
            </if>
        </where>
    </sql>


    <!-- 查询总数 -->
    <select id="queryForCount" parameterType="com.xmg.mybatis.query.UserQueryObject" resultType="int">
        select count(id) from user
        <include refid="user_where"/>
    </select>

    <!-- 查询分页内容 -->
    <select id="query" parameterType="com.xmg.mybatis.query.UserQueryObject" resultMap="user_mapping">
        select <include refid="user_column"/> from user
        <include refid="user_where"/>
        <if test="pageSize > -1">
            limit #{start},#{pageSize}
        </if>

    </select>



</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">

<!-- mybatis的配置 -->
<configuration>

    <!-- 通过properties引入参数 -->
    <properties resource="druid.properties"/>
    <!--可以在properties里面添加property,设置参数值
    <properties name="driver" values="com.mysql.jdbc.Driver"/>-->

    <!-- 配置mybatis的默认运行模式 -->
    <settings>
        <!-- 全局启用或禁用延迟加载。当禁用时，所有关联对象都会即使加载。开启延迟加载，设置为true -->
        <setting name="lazyLoadingEnabled" value="true"/>
        <!-- 按需加载 -->
        <setting name="aggressiveLazyLoading" value="false"/>
        <!-- 配置哪些方法会触发所有延迟加载对象加载  -->
        <setting name="lazyLoadTriggerMethods" value="close"/>

        <!--
        测试Mybatis懒加载不能直接用toString方法
        因为Mybatis默认toString方法是立即加载的，同样的方法还有clone、equal、hashCode

        默认情况:
        指定哪个对象的方法触发一次延迟加载
        <setting name="lazyLoadTriggerMethods" value="equals,clone,hashCode,toString"/>
        如果想toString方法不立即加载,则需要将toString方法移去:
        指定哪个对象的方法触发一次延迟加载
        <setting name="lazyLoadTriggerMethods" value="equals,clone,hashCode"/>
        -->
    </settings>


    <!-- 为类型添加别名 -->
    <typeAliases>
        <typeAlias type="test.domain.User" alias="User"/>

        <typeAlias type="test.many2one.Employee" alias="M2OEmployee"/>
        <typeAlias type="test.many2one.Department" alias="M2ODepartment"/>

        <typeAlias type="test.one2many.Employee" alias="O2MEmployee"/>
        <typeAlias type="test.one2many.Department" alias="O2MDepartment"/>

        <typeAlias type="test.many2many.Student" alias="Student"/>
        <typeAlias type="test.many2many.Teacher" alias="Teacher"/>

        <typeAlias type="org.mybatis.caches.ehcache.EhcacheCache" alias="ehcache"/>

        <package name="test.domain"/><!-- 设置注解 @Alias("User") -->
    </typeAliases>

    <!-- 环境 default对应的id,代表mybatis这次默认使用的数据库环境 -->
    <environments default="env1">
        <!-- 一个environment代表一个数据库环境 -->
        <environment id="env1">
            <!-- 配置事务管理 直接配置JDBC (一定要大写),代表使用JDBC事务; -->
            <transactionManager type="JDBC"/>
            <!-- 使用第三方数据库连接池,具体在druid包里 -->
            <!-- mybatis自带数据库连接池 <dataSource type="POOLED"> -->
            <dataSource type="test.druid.DruidDataSource">
                <property name="driverClassName" value="${driverClassName}"/>
                <property name="url" value="${url}"/>
                <property name="username" value="${username}"/>
                <property name="password" value="${password}"/>
            </dataSource>
        </environment>
    </environments>

    <!-- 配置mybatis需要管理的mapper文件 -->
    <mappers>
        <mapper resource="test/domain/UserMapper.xml"/>

        <mapper resource="test/many2one/EmployeeMapper.xml"/>
        <mapper resource="test/many2one/DepartmentMapper.xml"/>

        <mapper resource="test/one2many/EmployeeMapper.xml"/>
        <mapper resource="test/one2many/DepartmentMapper.xml"/>

        <mapper resource="test/many2many/StudentMapper.xml"/>
        <mapper resource="test/many2many/TeacherMapper.xml"/>
    </mappers>
</configuration>